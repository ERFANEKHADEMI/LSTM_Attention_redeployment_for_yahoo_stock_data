{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "String"
        }
    },
    "variables": {
        "resourceGroup": "[resourceGroup().name]",
        "location": "[resourceGroup().location]",
        "subscriptionId": "[subscription().subscriptionId]",
        "vNetName": "airflow-vnet",
        "subnetName": "functionapp",
        "outboundSubnetDeployment": "outboundSubnetDeployment",
        "storageAccountName": "[concat(parameters('name'), '81dc')]",
        "hostingPlanName": "[concat('ASP-', parameters('name'), '-be98')]",
        "use32BitWorkerProcess": false,
        "ftpsState": "FtpsOnly",
        "linuxFxVersion": "Python|3.10",
        "sku": "ElasticPremium",
        "skuCode": "EP1",
        "workerSize": "3",
        "workerSizeId": "3",
        "numberOfWorkers": "1",
        "alwaysOn": false
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[variables('outboundSubnetDeployment')]"
            ],
            "tags": {},
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(parameters('name'), 'ba17')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": "[variables('use32BitWorkerProcess')]",
                    "ftpsState": "[variables('ftpsState')]",
                    "linuxFxVersion": "[variables('linuxFxVersion')]"
                },
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": "[resourceId('rocket_test001', 'Microsoft.Network/virtualNetworks/subnets', 'airflow-vnet', 'functionapp')]",
                "publicNetworkAccess": "Disabled",
                "vnetRouteAllEnabled": true,
                "httpsOnly": true,
                "serverFarmId": "[concat('/subscriptions/', variables('subscriptionId'),'/resourcegroups/', variables('resourceGroup'), '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            },
            "resources": [
                {
                    "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                    "apiVersion": "2022-09-01",
                    "name": "[concat(parameters('name'), '/scm')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('name'))]"
                    ],
                    "properties": {
                        "allow": false
                    }
                },
                {
                    "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                    "apiVersion": "2022-09-01",
                    "name": "[concat(parameters('name'), '/ftp')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('name'))]"
                    ],
                    "properties": {
                        "allow": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[variables('location')]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "Tier": "[variables('sku')]",
                "Name": "[variables('skuCode')]"
            },
            "kind": "linux",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSize": "[variables('workerSize')]",
                "workerSizeId": "[variables('workerSizeId')]",
                "numberOfWorkers": "[variables('numberOfWorkers')]",
                "reserved": true,
                "maximumElasticWorkerCount": "20",
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-07-01",
            "name": "[variables('outboundSubnetDeployment')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2020-07-01",
                            "name": "[concat(variables('vNetName'), '/', variables('subnetName'))]",
                            "properties": {
                                "delegations": [
                                    {
                                        "name": "delegation",
                                        "properties": {
                                            "serviceName": "Microsoft.Web/serverfarms"
                                        }
                                    }
                                ],
                                "serviceEndpoints": [
                                    {
                                        "service": "Microsoft.Storage"
                                    }
                                ],
                                "addressPrefix": "10.3.1.0/24"
                            }
                        }
                    ]
                }
            },
            "subscriptionId": "[variables('subscriptionId')]",
            "resourceGroup": "[variables('resourceGroup')]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[variables('location')]",
            "tags": {},
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "defaultToOAuthAuthentication": true
            }
        }
    ]
}
